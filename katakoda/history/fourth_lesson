vi Dockerfile
 # FROM node:7-alpine
 #
 # RUN mkdir -p /src/app
 # WORKDIR /src/app
 #
 # Separate the copy of the package.json for let docker handle the cache of the
 # dependencies installation and source code separately
 #
 # COPY package.json /src/app/package.json
 # RUN npm i
 #
 # COPY . /src/app/
 # EXPOSE 3000
 #
 # ENTRYPOINT ["npm", "start"]
tree # sample NodeJS/ExpressJS application
 # .
 # ├── app.js
 # ├── bin
 # │   └── www
 # ├── Dockerfile
 # ├── Makefile
 # ├── package.json
 # ├── public
 # │   └── stylesheets
 # │       └── style.css
 # ├── routes
 # │   ├── index.js
 # │   └── users.js
 # └── views
 #     ├── error.jade
 #     ├── index.jade
 #     └── layout.jade

docker build -t my-nodejs-app:v1 .
docker container run -d --name my-running-app -p 3000:3000 my-nodejs-app:v1
docker container run -d --name my-production-running-app -e NODE_ENV=production -p 3000:3000 my-nodejs-app:v1 # Setting env var for docker container
